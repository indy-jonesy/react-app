name: CI

permissions: write-all

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - develop
      - main
  push:
    branches:
      - develop
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
      SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
    steps:
      - name: Checkout Action
        uses: actions/checkout@v3
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('./package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Install NPM
        run: npm ci
      - run: npm run format:check
      - run: npm test -- --coverage
        env:
          CI: true
      - name: Upload Test Coverage
        uses: actions/upload-artifact@v1
        with:
          path: coverage
          name: code-coverage
      - name: Build Project
        # this will ONLY run against push against `develop` branch
        if: github.event_name == 'push'
        run: npm run build
      - name: Upload Build Folder
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v1
        with:
          path: build
          name: build
      - name: ZIP Assets
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          zip -r build.zip ./build
          zip -r coverage.zip ./coverage
      - name: Create a release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy to Staging
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: npx surge --project ./build --domain elastic-appliance.surge.sh
      - name: Deploy to Prod
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx surge --project ./build --domain waiting-lake.surge.sh
      - name: Upload coverage reports to Codecov
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Open Issue
        if: failure() && github.event_name == 'pull_request'
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_.",
            "assignees": ["${{ github.event.pull_request.user.login }}"]
            }' \
          --fail
